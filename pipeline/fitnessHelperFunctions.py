# helper functions

from pandleau import *
import pandas as pd
import datetime
import os, sys

path_to_conf = "./conf/"
path_to_logs = "./logs/"
path_to_tableau = "./tableau/"


def make_uid(row) :
    '''creates workout uid'''
    return str(int(row['Rotation'])) + "." + str(int(row['Workout'])) + "." + str(int(row['Week']))

def make_datetime(r) :
    '''constructs datetime object for each workout'''
    if pd.notnull(r['Date']) :
        datetime_string = datetime.datetime.combine(r['Date'], r['Time'])
        return datetime_string

def make_1rm(x) :
    '''calculates a theoretical 1RM for each lift'''
    if pd.notnull(x) :
        r, w = x.split('x')[0], x.split('x')[1]
        return float(w)*(1 + int(r)/30)
    return None 
    
def make_conversion(df, out_file) :
    '''converts dataframe to tableau compliant format'''
    print(df.shape)
    tmp_df = pandleau(df)

    # remove if file exists, write out new file
    if os.path.isfile(os.path.join(path_to_tableau, out_file)) :
        os.remove(os.path.join(path_to_tableau, out_file))
    
    # tableau conversion
    tmp_df.to_tableau(
        os.path.join(path_to_tableau, out_file), 
        add_index=False
    )

    print("PYTHON: {0} conversion complete".format(os.path.join(path_to_tableau, out_file)))
    print("PYTHON: {0}".format(datetime.datetime.now().strftime("%d/%m/%Y %H:%M")))

def clean_logs() :
    '''cleans working directory of logs generated by conversion process'''
    # clean up log files
    log_path = os.path.join(os.getcwd(), "logs")

    log_files = [
        f for f in os.listdir("./")
        if os.path.isfile(os.path.join("./", f)) and ".log" in f
        or "hyper_db_" in f
    ]

    for file in log_files :
        os.rename(file, os.path.join(log_path, file))

    print("\nPYTHON: Directory cleaned")
    print("PYTHON: {0}".format(datetime.datetime.now().strftime("%d/%m/%Y %H:%M")))